on:
  workflow_call:
    inputs:
      projectName:
        required: true
        type: string
      projectAlias:
        required: true
        type: string
      namespace:
        required: true
        type: string        
                
        
jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read      
    steps:
      - name: Initialization
        id: init
        #We set the values in the output to be able to use them later
        run: |
          echo "::set-output name=docker_tag::${{ github.event.client_payload.tag  }}"
          echo "::set-output name=docker_image::${{ github.event.client_payload.image  }} "
          echo "::set-output name=origin_ref::${{ github.event.client_payload.ref  }}"
          echo "::set-output name=origin_event_name::${{ github.event.client_payload.event_name  }}"

      - name: Checkout One Creation Kubernetes repository
        # we only deploy if it's a merge to main branch
        if: contains('push', steps.init.outputs.origin_event_name)
        uses: actions/checkout@v2
        with:
          repository: One-Creation/oc-drm-kubernetes
          ref: refs/heads/master
          token:  ${{ secrets.ONECREATION_PAT_TOKEN }}
          persist-credentials: false
          path: ./oc-drm-kubernetes

      - name: Install Microservice
        # we only deploy if it's a merge to main branch
        if: contains('push', steps.init.outputs.origin_event_name)
        env:
          AWS_REGION: ${{ secrets.REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NAMESPACE: ${{ inputs.namespace }}
        run: |
          aws eks update-kubeconfig --name onecreation_eks-dev-eu-central-1 --region eu-central-1
          kubectl config set-context --current --namespace=$NAMESPACE
          chmod 755 install.sh
          RELEASE_VERSION=$(ls -t -s -r ../charts/releases/values* | head -1 | cut -d '/' -f4 | sed 's/values-//' | sed 's/.yaml//')
          export EXTERNALSET="--set tags.backend-all=false --set tags.${{ inputs.projectName }}=true --set global.namespace.enabled=true --set global.namespace.value=$NAMESPACE --set ${{ inputs.projectAlias }}.${{ inputs.projectName }}.image.tag=${{ steps.init.outputs.docker_tag }}"
          ./install.sh $RELEASE_VERSION int ../charts/one-creation/
        working-directory: oc-drm-kubernetes/helm/scripts
