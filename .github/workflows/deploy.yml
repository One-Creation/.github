on:
  workflow_call:
    inputs:
      projectName:
        required: true
        type: string
      projectAlias:
        required: true
        type: string
      namespace:
        required: true
        type: string        
                
        
jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read      
    steps:
      - name: Initialization
        id: init
        #We set the values in the output to be able to use them later
        run: |
          echo "::set-output name=docker_tag::${{ github.event.client_payload.tag  }}"
          echo "::set-output name=docker_image::${{ github.event.client_payload.image  }} "
          echo "::set-output name=origin_ref::${{ github.event.client_payload.ref  }}"
          echo "::set-output name=origin_event_name::${{ github.event.client_payload.event_name  }}"

      - name: Checkout One Creation Kubernetes repository
        # we only deploy if it's a merge to main branch
        if: contains(steps.init.outputs.origin_event_name, 'push')
        uses: actions/checkout@v2
        with:
          repository: One-Creation/oc-drm-kubernetes
          ref: refs/heads/master
          token:  ${{ secrets.ONECREATION_PAT_TOKEN }}
          persist-credentials: false
          path: ./oc-drm-kubernetes

      - name: Update Release information
        id: release-info
        # we only deploy if it's a merge to main branch
        if: contains(steps.init.outputs.origin_event_name, 'push')
        run: |
          RELEASE_VERSION=$(ls -t -s -r ../charts/releases/values* | head -1 | cut -d '/' -f4 )
          python UpdateReleaseImages.py -r  $RELEASE_VERSION -s ${{ inputs.projectName }} -t ${{  steps.init.outputs.docker_tag  }}  
          echo "::set-output name=release_version::$RELEASE_VERSION"
        working-directory: oc-drm-kubernetes/helm/scripts

      - name: Commit Changes on Kubernetes repo
        if: contains(steps.init.outputs.origin_event_name, 'push')
        uses: actions-js/push@v1.3
        with:
          github_token: ${{ secrets.ONECREATION_PAT_TOKEN }}
          message: Updating release details
          repository: One-Creation/oc-drm-kubernetes
          branch: master
          empty: true
          directory: oc-drm-kubernetes/helm/charts/releases

      - name: Install Microservice
        # we only deploy if it's a merge to main branch
        if: contains(steps.init.outputs.origin_event_name, 'push')
        env:
          AWS_REGION: ${{ secrets.REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NAMESPACE: ${{ inputs.namespace }}
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_INT }} --region ${{ secrets.REGION }}
          kubectl config set-context --current --namespace=$NAMESPACE
          chmod 755 install.sh
          RELEASE_VERSION=$(echo "${{  steps.release-info.outputs.release_version  }}"  | sed 's/values-//' | sed 's/.yaml//')
          export EXTERNALSET="--set ${{ inputs.projectAlias }}.${{ inputs.projectName }}.image.tag=${{ steps.init.outputs.docker_tag }}"
          ./install.sh $RELEASE_VERSION int
        working-directory: oc-drm-kubernetes/helm/scripts
